/*
 * Copyright (C) 2011 cismet GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package de.cismet.cids.custom.sudplan.wupp.geocpm.ie;

import java.io.File;
import java.util.ArrayList;
import java.util.Properties;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 * ImportExportTest tests right functionality of {@link GeoCPMImport} and {@link GeoCPMExport}.
 * For this purpose, it performs the following steps:
 *
 * 1) It creates a fresh cids database together with all tables and indexes needed for the import
 * 2) It imports the file <TEST_INPUT_FILE> with the {@link GeoCPMImport}er. NOTE: the file has to be 
 *    a gzipped file (committing files without compression would be too large). The test decompresses
 *    the file by itself.
 * 3) It exports the GeoCPM data imported before as described in the official GeoCPM interface definition to
 *    file <TEST_OUTPUT_FILE>.
 * 4) Then, both <TEST_INPUT_FILE> and <TEST_OUTPUT_FILE> are compared line by line. NOTE: The lines of both are trimmed
 *    before they are compared. The reason is that the original input and output files may have one field delimiter 
 *    (5 blanks) too much in a record. As this isn't expected in the GeoCPM interface description but the files 
 *    usually come from the standard authors themself, we just ignor this in our tests for now.
 * 5) Finally, the database created in step 1) is dropped and the output file generated by the {@link GeoCPMExport}er
 *    is deleted.
 * 
 * @author Benjamin Friedrich (benjamin.friedrich@cismet.de)
 * @version 1.0  01/2012
 */

public class ImportExportTest 
{    
  
    
    public ImportExportTest() {
    }

    
    @BeforeClass
    public static void setUpClass() throws Exception 
    {    
        final Properties p = new Properties();
        p.put("log4j.appender.Remote", "org.apache.log4j.net.SocketAppender");
        p.put("log4j.appender.Remote.remoteHost", "localhost");
        p.put("log4j.appender.Remote.port", "4445");
        p.put("log4j.appender.Remote.locationInfo", "true");
        p.put("log4j.rootLogger", "ALL,Remote");
        org.apache.log4j.PropertyConfigurator.configure(p);

    }

    @Test
    public void test() throws Exception
    {
//        GeoCPMExport exporter = new GeoCPMExport(2, 
//                                    46, 
//                                    new File("/tmp/geocpm_export"), 
//                                    "postgres", 
//                                    "cismetz12", 
//                                    "jdbc:postgresql://192.168.100.12:5432/sudplan_wupp");
//        exporter.doExport();
//        
//        
//        
//        final ArrayList<Double> precipitations = new ArrayList<Double>(12);
//
//        precipitations.add(88.89);
//        precipitations.add(88.89);
//        precipitations.add(88.89);
//        precipitations.add(88.89);
//        precipitations.add(88.89);
//        precipitations.add(88.89);
//        precipitations.add(333.33);
//        precipitations.add(333.33);
//        precipitations.add(333.33);
//        precipitations.add(333.33);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//        precipitations.add(80.00);
//
//        
//        exporter.generateDYNA(3, precipitations);
        
        
        //-----------------------------------------------------
        
        final GeoCPMAusImport ausImport = new GeoCPMAusImport(
                        new File("/home/bfriedrich/Desktop/geocpm_export"), 
                        "postgres", 
                         "cismetz12", 
                         "jdbc:postgresql://192.168.100.12:5432/sudplan_wupp",
                         "admin", 
                         "cismetz12", 
                         "http://192.168.100.12:9987/geoserver", 
                         "sudplan");
   
        ausImport.go();
    }
}
